name: PR Validation

on:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Install PowerShell (pwsh)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          set -euo pipefail
          . /etc/os-release
          CODENAME=${VERSION_CODENAME:-"jammy"}
          echo "Using Ubuntu codename: $CODENAME"
          curl -fsSL "https://packages.microsoft.com/config/ubuntu/$CODENAME/packages-microsoft-prod.deb" -o packages-microsoft-prod.deb \
            || curl -fsSL "https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb" -o packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Prepare host stub
        shell: pwsh
        run: |
          $out = Join-Path $PWD 'artifacts/host-assemblies'
          ./scripts/prepare-host-stub.ps1 -OutputPath $out
          "LIDARR_PATH=$out" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8NoBOM -Append

      - name: Build
        run: dotnet build -c Release -warnaserror:NU1903

      - name: Test
        run: dotnet test -c Release --no-build
