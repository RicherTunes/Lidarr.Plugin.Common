<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net6.0;net8.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <AssemblyName>Lidarr.Plugin.Abstractions</AssemblyName>
    <RootNamespace>Lidarr.Plugin.Abstractions</RootNamespace>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <NoWarn>SA1200;SA1633;CS1591</NoWarn>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net6.0'">
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.0" />
    <PackageReference Include="System.Text.Json" Version="6.0.11" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="8.0.1" />
    <PackageReference Include="System.Text.Json" Version="8.0.6" />
  </ItemGroup>

  <PropertyGroup>
    <_PublicApiRoot>PublicAPI/$(TargetFramework)/</_PublicApiRoot>
    <_PublicApiShippedSrc>$(_PublicApiRoot)PublicAPI.Shipped.txt</_PublicApiShippedSrc>
    <_PublicApiUnshippedSrc>$(_PublicApiRoot)PublicAPI.Unshipped.txt</_PublicApiUnshippedSrc>
  </PropertyGroup>

  <PropertyGroup>
    <CoreCompileDependsOn>PreparePublicApiBaselines;$(CoreCompileDependsOn)</CoreCompileDependsOn>
    <GenerateReferenceAssemblyDependsOn>PreparePublicApiBaselines;$(GenerateReferenceAssemblyDependsOn)</GenerateReferenceAssemblyDependsOn>
  </PropertyGroup>

  <Target Name="PreparePublicApiBaselines" BeforeTargets="CoreCompile;GenerateReferenceAssemblySource">
    <PropertyGroup>
      <_PublicApiIntermediate>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))</_PublicApiIntermediate>
      <_PublicApiShippedObj>$(_PublicApiIntermediate)PublicAPI.Shipped.txt</_PublicApiShippedObj>
      <_PublicApiUnshippedObj>$(_PublicApiIntermediate)PublicAPI.Unshipped.txt</_PublicApiUnshippedObj>
    </PropertyGroup>
    <Error Condition="!Exists('$(_PublicApiShippedSrc)')" Text="Missing Public API baseline: $(_PublicApiShippedSrc)" />
    <Error Condition="!Exists('$(_PublicApiUnshippedSrc)')" Text="Missing Public API baseline: $(_PublicApiUnshippedSrc)" />

    <Copy SourceFiles="$(_PublicApiShippedSrc)" DestinationFiles="$(_PublicApiShippedObj)" OverwriteReadOnlyFiles="true" />
    <Copy SourceFiles="$(_PublicApiUnshippedSrc)" DestinationFiles="$(_PublicApiUnshippedObj)" OverwriteReadOnlyFiles="true" />

    <ItemGroup>
      <AdditionalFiles Remove="**/PublicAPI.Shipped.txt" />
      <AdditionalFiles Remove="**/PublicAPI.Unshipped.txt" />
      <AdditionalFiles Include="$(_PublicApiShippedObj)" />
      <AdditionalFiles Include="$(_PublicApiUnshippedObj)" />
    </ItemGroup>

    <Message Importance="High" Text="TFM=$(TargetFramework) AdditionalFiles: @(AdditionalFiles -> '%(Identity)')" />
  </Target>

  <ItemGroup>
    <None Remove="PublicAPI.Shipped.txt" />
    <None Remove="PublicAPI.Unshipped.txt" />
    <AdditionalFiles Remove="PublicAPI.Shipped.txt" />
    <AdditionalFiles Remove="PublicAPI.Unshipped.txt" />
  </ItemGroup>
</Project>
