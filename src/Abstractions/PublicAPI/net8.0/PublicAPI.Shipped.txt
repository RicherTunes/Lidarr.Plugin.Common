#nullable enable
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient.EnqueueAlbumDownloadAsync(string! albumId, string! outputPath, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<string!>
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient.GetActiveDownloadsAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyList<Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem!>!>
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient.GetDownloadAsync(string! downloadId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem?>
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient.InitializeAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!>
Lidarr.Plugin.Abstractions.Contracts.IDownloadClient.RemoveDownloadAsync(string! downloadId, bool deleteData = false, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<bool>
Lidarr.Plugin.Abstractions.Contracts.IIndexer
Lidarr.Plugin.Abstractions.Contracts.IIndexer.GetAlbumAsync(string! albumId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Models.StreamingAlbum?>
Lidarr.Plugin.Abstractions.Contracts.IIndexer.InitializeAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!>
Lidarr.Plugin.Abstractions.Contracts.IIndexer.SearchAlbumsAsync(string! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyList<Lidarr.Plugin.Abstractions.Models.StreamingAlbum!>!>
Lidarr.Plugin.Abstractions.Contracts.IIndexer.SearchAlbumsStreamAsync(string! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<Lidarr.Plugin.Abstractions.Models.StreamingAlbum!>!
Lidarr.Plugin.Abstractions.Contracts.IIndexer.SearchTracksAsync(string! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyList<Lidarr.Plugin.Abstractions.Models.StreamingTrack!>!>
Lidarr.Plugin.Abstractions.Contracts.IIndexer.SearchTracksStreamAsync(string! query, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<Lidarr.Plugin.Abstractions.Models.StreamingTrack!>!
Lidarr.Plugin.Abstractions.Contracts.IPlugin
Lidarr.Plugin.Abstractions.Contracts.IPlugin.CreateDownloadClientAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Contracts.IDownloadClient?>
Lidarr.Plugin.Abstractions.Contracts.IPlugin.CreateIndexerAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Lidarr.Plugin.Abstractions.Contracts.IIndexer?>
Lidarr.Plugin.Abstractions.Contracts.IPlugin.InitializeAsync(Lidarr.Plugin.Abstractions.Contracts.IPluginContext! context, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask
Lidarr.Plugin.Abstractions.Contracts.IPlugin.Manifest.get -> Lidarr.Plugin.Abstractions.Manifest.PluginManifest!
Lidarr.Plugin.Abstractions.Contracts.IPlugin.SettingsProvider.get -> Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider!
Lidarr.Plugin.Abstractions.Contracts.IPluginContext
Lidarr.Plugin.Abstractions.Contracts.IPluginContext.HostVersion.get -> System.Version!
Lidarr.Plugin.Abstractions.Contracts.IPluginContext.LoggerFactory.get -> Microsoft.Extensions.Logging.ILoggerFactory!
Lidarr.Plugin.Abstractions.Contracts.IPluginContext.Services.get -> System.IServiceProvider?
Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider
Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider.Apply(System.Collections.Generic.IDictionary<string!, object?>! settings) -> Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!
Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider.Describe() -> System.Collections.Generic.IReadOnlyCollection<Lidarr.Plugin.Abstractions.Contracts.SettingDefinition!>!
Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider.GetDefaults() -> System.Collections.Generic.IReadOnlyDictionary<string!, object?>!
Lidarr.Plugin.Abstractions.Contracts.ISettingsProvider.Validate(System.Collections.Generic.IDictionary<string!, object?>! settings) -> Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!
Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult
Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult.Errors.get -> System.Collections.Generic.IReadOnlyList<string!>!
Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult.IsValid.get -> bool
Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult.Warnings.get -> System.Collections.Generic.IReadOnlyList<string!>!
Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Boolean = 1 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Enum = 4 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Integer = 2 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Json = 6 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Number = 3 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.Password = 5 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDataType.String = 0 -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.AllowedValues.get -> System.Collections.Generic.IReadOnlyList<string!>?
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.AllowedValues.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DataType.get -> Lidarr.Plugin.Abstractions.Contracts.SettingDataType
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DataType.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DefaultValue.get -> object?
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DefaultValue.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.Description.get -> string!
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.Description.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DisplayName.get -> string!
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.DisplayName.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.IsRequired.get -> bool
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.IsRequired.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.Key.get -> string!
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.Key.init -> void
Lidarr.Plugin.Abstractions.Contracts.SettingDefinition.SettingDefinition() -> void
Lidarr.Plugin.Abstractions.Hosting.DefaultPluginContext
Lidarr.Plugin.Abstractions.Hosting.DefaultPluginContext.DefaultPluginContext(System.Version! hostVersion, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, System.IServiceProvider? services = null) -> void
Lidarr.Plugin.Abstractions.Hosting.DefaultPluginContext.HostVersion.get -> System.Version!
Lidarr.Plugin.Abstractions.Hosting.DefaultPluginContext.LoggerFactory.get -> Microsoft.Extensions.Logging.ILoggerFactory!
Lidarr.Plugin.Abstractions.Hosting.DefaultPluginContext.Services.get -> System.IServiceProvider?
Lidarr.Plugin.Abstractions.Hosting.PluginHandle
Lidarr.Plugin.Abstractions.Hosting.PluginHandle.DisposeAsync() -> System.Threading.Tasks.ValueTask
Lidarr.Plugin.Abstractions.Hosting.PluginHandle.LoadContext.get -> Lidarr.Plugin.Abstractions.Hosting.PluginLoadContext!
Lidarr.Plugin.Abstractions.Hosting.PluginHandle.Plugin.get -> Lidarr.Plugin.Abstractions.Contracts.IPlugin!
Lidarr.Plugin.Abstractions.Hosting.PluginHandle.PluginHandle(Lidarr.Plugin.Abstractions.Contracts.IPlugin! plugin, Lidarr.Plugin.Abstractions.Hosting.PluginLoadContext! loadContext) -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadContext
Lidarr.Plugin.Abstractions.Hosting.PluginLoadContext.PluginLoadContext(string! mainAssemblyPath, System.Collections.Generic.IEnumerable<string!>? sharedAssemblies = null, bool isCollectible = true) -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoader
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.ContractVersion.get -> System.Version?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.ContractVersion.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.HostVersion.get -> System.Version?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.HostVersion.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.Manifest.get -> Lidarr.Plugin.Abstractions.Manifest.PluginManifest?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.Manifest.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginAssemblyFile.get -> string?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginAssemblyFile.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginContext.get -> Lidarr.Plugin.Abstractions.Contracts.IPluginContext?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginContext.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginDirectory.get -> string?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginDirectory.init -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.PluginLoadRequest() -> void
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.SharedAssemblies.get -> System.Collections.Generic.IReadOnlyCollection<string!>?
Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest.SharedAssemblies.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult
Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult.IsCompatible.get -> bool
Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult.Message.get -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.ApiVersion.get -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.ApiVersion.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Author.get -> string?
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Author.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Capabilities.get -> System.Collections.Generic.IReadOnlyList<string!>!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Capabilities.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.CommonVersion.get -> string?
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.CommonVersion.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Description.get -> string?
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Description.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.EntryAssembly.get -> string?
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.EntryAssembly.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.EvaluateCompatibility(System.Version! hostVersion, System.Version! abstractionsVersion) -> Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Id.get -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Id.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.MinHostVersion.get -> string?
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.MinHostVersion.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Name.get -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Name.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.PluginManifest() -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.RequiredSettings.get -> System.Collections.Generic.IReadOnlyList<string!>!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.RequiredSettings.init -> void
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.ToJson() -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Version.get -> string!
Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Version.init -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.AlbumDownloadProgress() -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.CompletedTracks.get -> int
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.CompletedTracks.set -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.CurrentTrack.get -> string!
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.CurrentTrack.set -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.EstimatedTimeRemaining.get -> System.TimeSpan
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.EstimatedTimeRemaining.set -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.OverallPercentage.get -> double
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.TotalBytesDownloaded.get -> long
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.TotalBytesDownloaded.set -> void
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.TotalTracks.get -> int
Lidarr.Plugin.Abstractions.Models.AlbumDownloadProgress.TotalTracks.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.AdditionalArtists.get -> System.Collections.Generic.List<Lidarr.Plugin.Abstractions.Models.StreamingArtist!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.AdditionalArtists.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Artist.get -> Lidarr.Plugin.Abstractions.Models.StreamingArtist!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Artist.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.AvailableQualities.get -> System.Collections.Generic.List<Lidarr.Plugin.Abstractions.Models.StreamingQuality!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.AvailableQualities.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.CoverArtUrls.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.CoverArtUrls.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Duration.get -> System.TimeSpan?
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Duration.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.ExternalIds.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.ExternalUrls.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.ExternalUrls.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Genres.get -> System.Collections.Generic.List<string!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Genres.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.GetAllArtistNames(string! separator = ", ") -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.GetBestCoverArtUrl(string! preferredSize = "large") -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.GetBestQuality() -> Lidarr.Plugin.Abstractions.Models.StreamingQuality?
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.GetPrimaryArtistName() -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Id.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Label.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Label.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Metadata.get -> System.Collections.Generic.Dictionary<string!, object!>!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Metadata.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.MusicBrainzId.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.MusicBrainzId.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.ReleaseDate.get -> System.DateTime?
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.ReleaseDate.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.StreamingAlbum() -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Title.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Title.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.TrackCount.get -> int
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.TrackCount.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Type.get -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Type.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Upc.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingAlbum.Upc.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Album = 0 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Bootleg = 7 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Compilation = 3 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.EP = 2 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Live = 5 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Remix = 6 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Single = 1 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingAlbumType.Soundtrack = 4 -> Lidarr.Plugin.Abstractions.Models.StreamingAlbumType
Lidarr.Plugin.Abstractions.Models.StreamingArtist
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Biography.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Biography.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Country.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Country.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.ExternalUrls.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.ExternalUrls.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Genres.get -> System.Collections.Generic.List<string!>!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Genres.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.GetBestImageUrl(string! preferredSize = "medium") -> string!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Id.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.ImageUrls.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.ImageUrls.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Metadata.get -> System.Collections.Generic.Dictionary<string!, object!>!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Metadata.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Name.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingArtist.Name.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingArtist.StreamingArtist() -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Album.get -> Lidarr.Plugin.Abstractions.Models.StreamingAlbum?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Album.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.AlbumId.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.AlbumId.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CancellationToken.get -> System.Threading.CancellationTokenSource?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CancellationToken.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CompletedAt.get -> System.DateTime?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CompletedAt.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CurrentTrack.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.CurrentTrack.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.ErrorMessage.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.ErrorMessage.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Id.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.IsCompleted.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.IsCompleted.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.LastUpdated.get -> System.DateTime
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.LastUpdated.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.OutputPath.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.OutputPath.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Progress.get -> double
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Progress.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.StartedAt.get -> System.DateTime
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.StartedAt.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Status.get -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Status.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.StreamingDownloadItem() -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Success.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingDownloadItem.Success.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Duration.get -> System.TimeSpan
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Duration.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.ErrorMessage.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.ErrorMessage.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.FilePath.get -> string?
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.FilePath.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.FileSize.get -> long
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.FileSize.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Metadata.get -> System.Collections.Generic.Dictionary<string!, object!>!
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Metadata.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.StreamingDownloadResult() -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Success.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingDownloadResult.Success.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus.Cancelled = 4 -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus.Completed = 2 -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus.Downloading = 1 -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus.Failed = 3 -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus.Queued = 0 -> Lidarr.Plugin.Abstractions.Models.StreamingDownloadStatus
Lidarr.Plugin.Abstractions.Models.StreamingQuality
Lidarr.Plugin.Abstractions.Models.StreamingQuality.BitDepth.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingQuality.BitDepth.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Bitrate.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Bitrate.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Format.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Format.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.GetTier() -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Id.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.IsHighResolution.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingQuality.IsLossless.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Name.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingQuality.Name.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.SampleRate.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingQuality.SampleRate.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingQuality.StreamingQuality() -> void
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier.High = 3 -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier.HiRes = 5 -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier.Lossless = 4 -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier.Low = 1 -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingQualityTier.Normal = 2 -> Lidarr.Plugin.Abstractions.Models.StreamingQualityTier
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Album.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Album.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Artist.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Artist.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.CoverArtUrl.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.CoverArtUrl.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Duration.get -> System.TimeSpan?
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Duration.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Genre.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Genre.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Id.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Label.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Label.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Metadata.get -> System.Collections.Generic.Dictionary<string!, object!>!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Metadata.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.ReleaseDate.get -> System.DateTime?
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.ReleaseDate.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.StreamingSearchResult() -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Title.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Title.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.TrackCount.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.TrackCount.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Type.get -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchResult.Type.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchType.Album = 0 -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchType.Artist = 1 -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchType.Label = 4 -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchType.Playlist = 3 -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingSearchType.Track = 2 -> Lidarr.Plugin.Abstractions.Models.StreamingSearchType
Lidarr.Plugin.Abstractions.Models.StreamingTrack
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Album.get -> Lidarr.Plugin.Abstractions.Models.StreamingAlbum!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Album.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Artist.get -> Lidarr.Plugin.Abstractions.Models.StreamingArtist!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Artist.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.AvailableQualities.get -> System.Collections.Generic.List<Lidarr.Plugin.Abstractions.Models.StreamingQuality!>!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.AvailableQualities.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.DiscNumber.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingTrack.DiscNumber.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Duration.get -> System.TimeSpan?
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Duration.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.ExternalIds.get -> System.Collections.Generic.Dictionary<string!, string!>!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.FeaturedArtists.get -> System.Collections.Generic.List<Lidarr.Plugin.Abstractions.Models.StreamingArtist!>!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.FeaturedArtists.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.GetBestQuality() -> Lidarr.Plugin.Abstractions.Models.StreamingQuality?
Lidarr.Plugin.Abstractions.Models.StreamingTrack.GetFullTitle() -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Id.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Id.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.IsExplicit.get -> bool
Lidarr.Plugin.Abstractions.Models.StreamingTrack.IsExplicit.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Isrc.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Isrc.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Metadata.get -> System.Collections.Generic.Dictionary<string!, object!>!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Metadata.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.MusicBrainzId.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.MusicBrainzId.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Popularity.get -> long?
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Popularity.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.PreviewUrl.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.PreviewUrl.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.StreamingTrack() -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Title.get -> string!
Lidarr.Plugin.Abstractions.Models.StreamingTrack.Title.set -> void
Lidarr.Plugin.Abstractions.Models.StreamingTrack.TrackNumber.get -> int?
Lidarr.Plugin.Abstractions.Models.StreamingTrack.TrackNumber.set -> void
override Lidarr.Plugin.Abstractions.Models.StreamingQuality.ToString() -> string!
static Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult.Failure(System.Collections.Generic.IEnumerable<string!>! errors, System.Collections.Generic.IEnumerable<string!>? warnings = null) -> Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!
static Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult.Success(params string![]! warnings) -> Lidarr.Plugin.Abstractions.Contracts.PluginValidationResult!
static Lidarr.Plugin.Abstractions.Hosting.PluginLoader.LoadAsync(Lidarr.Plugin.Abstractions.Hosting.PluginLoadRequest! request, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Lidarr.Plugin.Abstractions.Hosting.PluginHandle!>!
static Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult.Compatible(string! message = "Compatible") -> Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult!
static Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult.Incompatible(string! message) -> Lidarr.Plugin.Abstractions.Manifest.PluginCompatibilityResult!
static Lidarr.Plugin.Abstractions.Manifest.PluginManifest.FromJson(string! json) -> Lidarr.Plugin.Abstractions.Manifest.PluginManifest!
static Lidarr.Plugin.Abstractions.Manifest.PluginManifest.Load(string! manifestPath) -> Lidarr.Plugin.Abstractions.Manifest.PluginManifest!
