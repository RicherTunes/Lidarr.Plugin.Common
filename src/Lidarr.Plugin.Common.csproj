<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0;net6.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <AssemblyName>Lidarr.Plugin.Common</AssemblyName>
    <RootNamespace>Lidarr.Plugin.Common</RootNamespace>
    <!-- Use SDK-generated assembly attributes -->
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <!-- Disable central package management for independent repository -->
    <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
    <!-- NuGet Package Configuration -->
    <PackageId>Lidarr.Plugin.Common</PackageId>
    <Version>1.2.2</Version>
    <!-- For stable releases, keep PackageVersion omitted or equal to Version -->
    <!-- Package Metadata -->
    <Title>Lidarr Plugin Common Library</Title>
    <Authors>RicherTunes Community</Authors>
    <Company>RicherTunes</Company>
    <Description>Shared library for building Lidarr streaming service plugins. Reduces development time by 60%+ through battle-tested utilities, models, and patterns.</Description>
    <Copyright>Copyright Â© 2025 RicherTunes Community</Copyright>
    <PackageProjectUrl>https://github.com/RicherTunes/Lidarr.Plugin.Common</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/RicherTunes/Lidarr.Plugin.Common.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>lidarr;plugin;streaming;music;utilities;qobuz;tidal;spotify</PackageTags>
    <PackageReleaseNotes>v1.2.1: Token-at-rest encryption (DPAPI/Keychain/Secret Service/Data Protection + AKV); TagLib default to public; CI security gates; docs updates. See CHANGELOG.md.</PackageReleaseNotes>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <!-- Build Configuration -->
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <NoWarn>SA1200;SA1633;CS1591;CS8625;CS8618;CS8604;CS8603;CS8601;CS8602;CS8629</NoWarn>
    <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>
    <EnableNETAnalyzers>false</EnableNETAnalyzers>
    <!-- Package Generation -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Source Link for debugging -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <!-- Make PublicAPI baselines visible to analyzer tools (e.g., dotnet format) without relying on build targets -->
  <ItemGroup>
    <AdditionalFiles Include="PublicAPI/net6.0/PublicAPI.Shipped.txt" Condition="Exists('PublicAPI/net6.0/PublicAPI.Shipped.txt')" />
    <AdditionalFiles Include="PublicAPI/net6.0/PublicAPI.Unshipped.txt" Condition="Exists('PublicAPI/net6.0/PublicAPI.Unshipped.txt')" />
    <AdditionalFiles Include="PublicAPI/net8.0/PublicAPI.Shipped.txt" Condition="Exists('PublicAPI/net8.0/PublicAPI.Shipped.txt')" />
    <AdditionalFiles Include="PublicAPI/net8.0/PublicAPI.Unshipped.txt" Condition="Exists('PublicAPI/net8.0/PublicAPI.Unshipped.txt')" />
  </ItemGroup>

  <PropertyGroup>
    <PublicApiUseSourcesForCodeFix>false</PublicApiUseSourcesForCodeFix>
    <_ApiSrcDir>PublicAPI/$(TargetFramework)/</_ApiSrcDir>
    <_ApiShippedSrc>$(_ApiSrcDir)PublicAPI.Shipped.txt</_ApiShippedSrc>
    <_ApiUnshippedSrc>$(_ApiSrcDir)PublicAPI.Unshipped.txt</_ApiUnshippedSrc>
    <_ApiObjDir>$([System.IO.Path]::Combine('$(BaseIntermediateOutputPath)', '$(Configuration)', '$(TargetFramework)'))</_ApiObjDir>
    <_ApiShippedObj>$([System.IO.Path]::Combine('$(_ApiObjDir)', 'PublicAPI.Shipped.txt'))</_ApiShippedObj>
    <_ApiUnshippedObj>$([System.IO.Path]::Combine('$(_ApiObjDir)', 'PublicAPI.Unshipped.txt'))</_ApiUnshippedObj>
  </PropertyGroup>
  <!-- Exclude disabled files from compilation -->
  <ItemGroup>
    <Compile Remove="**\*.disabled\**\*.cs" />
    <Compile Remove="Abstractions\**\*.cs" />
    <EmbeddedResource Remove="Abstractions\**\*" />
    <None Remove="Abstractions\**\*" />
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Compat\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net6.0'">
    <Compile Include="Compat\net6\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net8.0'">
    <Compile Include="Compat\net8\**\*.cs" />
  </ItemGroup>

  <!-- Exclude CLI framework files when not explicitly included -->
  <ItemGroup Condition="'$(IncludeCLIFramework)' != 'true'">
    <Compile Remove="CLI\**\*.cs" />
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="Abstractions/Lidarr.Plugin.Abstractions.csproj" />
  </ItemGroup>

  <!-- Core Dependencies -->
  <ItemGroup>
    <PackageReference Include="FluentValidation" Version="11.11.0" />
    <PackageReference Include="Microsoft.DotNet.PackageValidation" Version="1.0.0-preview.7.21379.12" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='net6.0'">
    <PackageReference Include="System.Text.Json" Version="6.0.11" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.2" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="6.0.3" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="6.0.2" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="6.0.2" />
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="6.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection" Version="6.0.36" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection.Extensions" Version="6.0.36" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='net8.0'">
    <PackageReference Include="System.Text.Json" Version="8.0.6" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="8.0.0" />
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection" Version="8.0.16" />
    <PackageReference Include="Microsoft.AspNetCore.DataProtection.Extensions" Version="8.0.16" />
  </ItemGroup>
  <!-- CLI Framework Dependencies - Optional for development/testing only -->
  <!-- Production consumers: exclude pre-release dependencies by default -->
  <!-- Development teams: enable with -p:IncludeCLIFramework=true -->
  <ItemGroup Condition="'$(IncludeCLIFramework)' == 'true'">
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" PrivateAssets="All" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.4" PrivateAssets="All" />
    <PackageReference Include="Spectre.Console" Version="0.50.0" PrivateAssets="All" />
  </ItemGroup>
  <!-- Audio Processing Dependency removed from core to avoid private feed.
       Plugin authors who need TagLib should reference a public package (e.g., TagLibSharp from nuget.org) directly in their plugin. -->

  <ItemGroup>
    <None Remove="..\docs\**\*" />
    <None Remove="..\examples\**\*" />
  </ItemGroup>
  <!-- Include documentation files in package -->
  <ItemGroup>
    <None Include="..\README.md" Pack="true" PackagePath="\" />
    <None Include="..\CHANGELOG.md" Pack="true" PackagePath="\" />
  </ItemGroup>
  <!-- Azure Key Vault integration for Data Protection (optional, .NET 8+) -->
  <ItemGroup Condition="'$(TargetFramework)'=='net8.0'">
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" Version="1.6.1" />
    <PackageReference Include="Azure.Identity" Version="1.12.0" />
  </ItemGroup>

  <Target Name="PreparePublicApiBaselines"
          BeforeTargets="GenerateReferenceAssemblySource;CoreCompile">
    <Error Condition="!Exists('$(_ApiShippedSrc)')"
           Text="Missing Public API baseline: $(_ApiShippedSrc)" />
    <Error Condition="!Exists('$(_ApiUnshippedSrc)')"
           Text="Missing Public API baseline: $(_ApiUnshippedSrc)" />

    <MakeDir Directories="$(_ApiObjDir)" />

    <Copy SourceFiles="$(_ApiShippedSrc)"
          DestinationFiles="$(_ApiShippedObj)"
          OverwriteReadOnlyFiles="true" />
    <Copy SourceFiles="$(_ApiUnshippedSrc)"
          DestinationFiles="$(_ApiUnshippedObj)"
          OverwriteReadOnlyFiles="true" />

    <ItemGroup>
      <AdditionalFiles Remove="**/PublicAPI.Shipped.txt" />
      <AdditionalFiles Remove="**/PublicAPI.Unshipped.txt" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublicApiUseSourcesForCodeFix)' == 'true'">
      <AdditionalFiles Include="$(_ApiShippedSrc)" />
      <AdditionalFiles Include="$(_ApiUnshippedSrc)" />
    </ItemGroup>

    <ItemGroup Condition="'$(PublicApiUseSourcesForCodeFix)' != 'true'">
      <AdditionalFiles Include="$(_ApiShippedObj)" />
      <AdditionalFiles Include="$(_ApiUnshippedObj)" />
    </ItemGroup>
  </Target>

  <Target Name="VerifyPublicApiAdditionalFiles" BeforeTargets="Csc">
    <Error Condition="$([System.Int32]::Parse('@(AdditionalFiles->Count())')) != 2"
           Text="Public API baselines not applied for $(TargetFramework). AdditionalFiles: @(AdditionalFiles)" />
  </Target>

  <ItemGroup>
    <None Remove="PublicAPI.Shipped.txt" />
    <None Remove="PublicAPI.Unshipped.txt" />
    <AdditionalFiles Remove="PublicAPI.Shipped.txt" />
    <AdditionalFiles Remove="PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <!-- Audio metadata dependency: prefer public TagLibSharp, optionally use Lidarr build on CI -->
  <ItemGroup Condition="'$(UseLidarrTaglib)'!='true'">
    <PackageReference Include="TagLibSharp" Version="2.3.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(UseLidarrTaglib)'=='true'">
    <PackageReference Include="TagLibSharp-Lidarr" Version="2.2.0.27" />
  </ItemGroup>
</Project>



